(define (cc amount kinds-of-coins)
  (cond ((= amount 0) 1)
        ((or (< amount 0) (= kinds-of-coins 0)) 0)
        (else (+ (cc amount
                     (- kinds-of-coins 1))
                 (cc (- amount
                        (first-denomination kinds-of-coins))
                     kinds-of-coins)))))

(define (first-denomination kinds-of-coins)
  (cond ((= kinds-of-coins 1) 1)
        ((= kinds-of-coins 2) 5)
        ((= kinds-of-coins 3) 10)
        ((= kinds-of-coins 4) 25)
        ((= kinds-of-coins 5) 50)))

(define (cc1 x)
  (cc2 x x 1 0))

(define (cc2 o at koc ct)
  (if (> (- at (first-denomination koc)) 0)
      (cc2 o (- at (first-denomination koc)) koc ct)
      (if (= (- at (first-denomination koc)) 0)
          (+ (cc2 o o koc (+ ct 1))
             (cc2 o o (+ koc 1) (ct)))
          ct)))

(cc1 5)